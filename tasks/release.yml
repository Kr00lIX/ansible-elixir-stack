---
- when: 'deploy_type == "restart"'
  sudo: yes
  name: stop app
  monit: name="{{ app_name }}" state=stopped
  ignore_errors: true


- when: 'deploy_type == "restart"'
  name: 'delete release'
  command: 'bash -lc "mix release.clean" chdir="{{ project_path }}"'
  remote_user: "{{ deployer }}"


- name: "compile and release"
  command: bash -lc "SERVER=1 mix do compile, release" chdir="{{ project_path }}"
#  command: 'mix do compile, release'
#  args:
#    chdir: "{{ project_path }}"
  environment:
#    SERVER: '1'
    MIX_ENV: "{{ mix_env }}"
    PORT: "{{ app_port }}"
  remote_user: "{{ deployer }}"


- when: 'deploy_type == "restart"'
  sudo: yes
  name: start app
  monit: name="{{ app_name }}" state=started


- when: 'deploy_type == "upgrade"'
  name: get app version
  command: bash -lc "mix run --no-start --no-debug-info -e 'IO.puts Mix.Project.config[:version]'" chdir="{{ project_path }}"
  remote_user: "{{ deployer }}"
  register: app_version
  environment:
    SERVER: '1'
    MIX_ENV: "{{ mix_env }}"
    PORT: "{{ app_port }}"


- when: deploy_type == "upgrade"
  name: set upgrade command
  set_fact: upgrade_command='rel/{{ app_prefix }}/bin/{{ app_prefix }} upgrade "{{ app_version.stdout }}"'


- when: deploy_type == "upgrade"
  name: upgrade app
  # todo: if error, try restart
  command: bash -lc "{{ upgrade_command }}" chdir="{{ project_path }}"
  remote_user: "{{ deployer }}"
  environment:
    MIX_ENV: "{{ mix_env }}"
    PORT: "{{ app_port }}"
